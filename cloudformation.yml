AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  MyIP:
    Description: My IP address
    Type: String
  CivitAiKey:
    Description: CivitAi key
    Type: String
Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Stable Diffusion ec2 security group
      GroupName: stablediffusion
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 #Temporary all access to install requirements
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 #Temporary all access to install requirements
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP #Temporary all access to install requirements
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 #Temporary all access to install requirements
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 #Temporary all access to install requirements
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP #Temporary all access to install requirements
      VpcId: vpc-03e441f3ef5b69a19
  EC2S3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies: 
        - PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::vietnguy-sd-output
                  - arn:aws:s3:::vietnguy-sd-output/*
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2S3AccessRole
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0feb5cbbf7a1ebe0c
      InstanceType: g5.xlarge
      KeyName: viet-key
      SecurityGroupIds:
        - !Ref SecurityGroup
      AvailabilityZone: us-east-1a
      IamInstanceProfile: !Ref EC2InstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda  # Root volume
          Ebs:
            VolumeSize: 30  # Root disk size in GB
            VolumeType: gp3  # General Purpose SSD
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub 
          - |
            #!/bin/bash -xe
            sudo dnf install -y python3.12 git
            sudo git clone https://github.com/vietlnguy/aws-stablediffusion.git
            sudo curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            python3 get-pip.py
            pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu126
            cd / && cd aws-stablediffusion
            pip install -r requirements.txt
            DEVICE_NAME="/dev/xvdf"
            MOUNT_POINT="/mnt/data"
            if ! blkid $DEVICE_NAME; then
              mkfs -t ext4 $DEVICE_NAME
            fi
            mkdir -p $MOUNT_POINT
            mount $DEVICE_NAME $MOUNT_POINT
            export CIVITAI_KEY=${civitaikey}
            python3 /aws-stablediffusion/sync-models.py
            nohup python3 /aws-stablediffusion/main.py
            sleep 10
            python3 /aws-stablediffusion/script_examples/basic_api_example.py
            aws s3 sync /aws-stablediffusion/output s3://vietnguy-sd-output
          - civitaikey: !Ref CivitAiKey
  VolumeAttachment:
     Type: AWS::EC2::VolumeAttachment
     Properties:
       InstanceId: !Ref EC2Instance
       VolumeId: vol-0943f67edf7774ff3
       Device: /dev/xvdf
